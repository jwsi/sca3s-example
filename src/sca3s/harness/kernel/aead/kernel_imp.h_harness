/* Copyright (C) 2018 SCARV project <info@scarv.org>
 *
 * Use of this source code is restricted per the MIT license, a copy of which 
 * can be found at https://opensource.org/licenses/MIT (or should be included 
 * as LICENSE.txt within the associated archive or repository).
 */

#ifndef __KERNEL_IMP_H_HARNESS
#define __KERNEL_IMP_H_HARNESS

#include   "util.h"
#include "kernel.h"

// ============================================================================

/** @brief      A symbolic identifier for the generic    kernel name.
  */

#define KERNEL_NAMEOF_GENERIC ( 0 )

/** @brief      A symbolic identifier for the encryption kernel mode.
  */

#define KERNEL_MODEOF_ENC     ( 0 )

/** @brief      A symbolic identifier for the decryption kernel mode.
  */

#define KERNEL_MODEOF_DEC     ( 1 )

// ----------------------------------------------------------------------------

/** @brief      Initial value of register that contains the externally supplied randomness.
  */

#if !defined( KERNEL_INITOF_ESR )
#define KERNEL_INITOF_ESR
#endif

/** @brief      Initial value of register that contains the cipher key.
  */

#if !defined( KERNEL_INITOF_K   )
#define KERNEL_INITOF_K
#endif

/** @brief      Initial value of register that contains the associated data.
  */

#if !defined( KERNEL_INITOF_A   )
#define KERNEL_INITOF_A
#endif

/** @brief      Initial value of register that contains the  plaintext data.
  */

#if !defined( KERNEL_INITOF_M   )
#define KERNEL_INITOF_M
#endif

/** @brief      Initial value of register that contains the ciphertext data.
  */

#if !defined( KERNEL_INITOF_C   )
#define KERNEL_INITOF_C
#endif

// ============================================================================

#endif
